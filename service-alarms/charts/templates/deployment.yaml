apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "book-keeper-mgmt-service.fullname" . }}
  labels:
    {{- include "book-keeper-mgmt-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "book-keeper-mgmt-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "book-keeper-mgmt-service.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "book-keeper-mgmt-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-database
          image: postgres:latest
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.database.host }}-creds"
                  key: POSTGRES_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.database.host }}-creds"
                  key: POSTGRES_PASSWORD
            - name: DB_HOST
              value: {{ .Values.database.host }}
            - name: DB_NAME
              value: {{ .Values.database.name }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [ "sh", "-c", "psql -h $DB_HOST -U $POSTGRES_USER postgres -tc \"SELECT 1 FROM pg_database WHERE datname = '$DB_NAME'\" | grep -q 1 || psql -h $DB_HOST -U $POSTGRES_USER postgres -c \"CREATE DATABASE $DB_NAME;\"" ]
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.database.host }}-creds"
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.database.host }}-creds"
                  key: POSTGRES_PASSWORD
            - name: DB_NAME
              value: {{ .Values.database.name }}
            - name: DB_HOST
              value: {{ .Values.database.host }}
            - name: INFO_SERVICE_HOST
              value: "{{ .Release.Name }}-info-service"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
